name: CI/CD Pipeline

on:
  push:
    branches:
      - '*'  # Триггер на все ветки
  pull_request:
    branches:
      - main  # Триггер на pull requests в ветку main

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      db:
        image: mysql:8.0
        env:
          MYSQL_DATABASE: books
          MYSQL_USER: app_user
          MYSQL_PASSWORD: password
          MYSQL_ROOT_PASSWORD: heisenberg7709
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
        ports:
          - 3306:3306

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
<<<<<<< HEAD
      
=======
        
      - name: Install Docker Compose
        run: |
          curl -L "https://github.com/docker/compose/releases/download/v2.20.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          chmod +x /usr/local/bin/docker-compose

>>>>>>> f0c8cd71df8d152ce799c9f0a80d928896b84933
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

<<<<<<< HEAD
      - name: Build Docker image
        run: |
          docker build -t library-management:latest .

      - name: Run Docker container
		run: |
		  docker run -d -p 8080:8080 library-management:latest

      - name: Deploy to Minikube
        run: |
          kubectl apply -f kubernetes/mysql-deployment.yaml
          kubectl apply -f kubernetes/mysql-service.yaml
          kubectl apply -f kubernetes/deployment.yaml
          kubectl apply -f kubernetes/service.yaml
        env:
          KUBECONFIG: ${{ secrets.KUBECONFIG }}	
=======
      - name: Build and push Docker images
        run: |
          docker-compose -f docker-compose.yaml build
          docker-compose -f docker-compose.yaml up -d

      - name: Deploy to production
        if: github.ref == 'refs/heads/main'
        run: |
          # Деплой приложения в продакшн окружение
          echo "Deploying to production environment"
>>>>>>> f0c8cd71df8d152ce799c9f0a80d928896b84933
